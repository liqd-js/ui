{
    //https://componentator.com

    function arcradius( cx, cy, radius, degrees )
    {
		var radians = ( degrees - 90 ) * Math.PI / 180.0;
		return { x: cx + ( radius * Math.cos( radians )), y: cy + ( radius * Math.sin( radians ))};
	}

    function Pie( data, options )
    {
        let total = data.reduce(( t, d ) => t += d.value, 0 );
        let radius = options.radius - options.width / 2, width = options.width;
        let cx = options.radius, cy = options.radius;
        let start = 0;
        
        let svg = `<svg width="${2*options.radius}" height="${2*options.radius}" viewBox="0 0 ${2*options.radius} ${2*options.radius}" data-total="${total}">`;
        
        for( let datum of data )
        {
            var angle = 360 * datum.value / total;

            var b = arcradius( cx, cy, radius, start + angle );
            var e = arcradius( cx, cy, radius, start );
            var la = angle <= 180 ? 0 : 1;
            
            start += angle;
            
            svg += `<g><path d="${['M', b.x, b.y, 'A', radius, radius, 0, la, 0, e.x, e.y].join(' ')}" stroke="${datum.color}" fill="none" stroke-width="${width}" /></g>`;
        }
    
        svg += '</svg>';

        return svg;
    }
}
#{Pie( $props.data, { radius: $props.radius, width: $props.width || $props.radius })}
