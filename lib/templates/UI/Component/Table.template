[root]
{
    <style>
        .UI_Table
        {
            display: grid;
            flex-direction: column;

            > .UI_Table_Header, > .UI_Table_Row { grid-template-columns: 30px 2fr 1fr 1fr; }

            //> .UI_Table_Header, > .UI_Table_Row { grid-template-columns: minmax( max-content, 1fr ) minmax( max-content, 1fr ) minmax( max-content, 1fr ) minmax( max-content, 1fr ); }

            //grid-template-columns: minmax( max-content, 1fr ) minmax( max-content, 1fr ) minmax( max-content, 1fr ) minmax( max-content, 1fr );
        
            > .UI_Table_Header
            {
                display: grid;
                position: -webkit-sticky;
                position: sticky;
                top: 0;
                z-index: 1;
                //display: contents;

                > .UI_Table_Cell
                {
                    background: red;
                }
            }

            > .UI_Table_Row
            {
                display: grid;
                //display: contents;
            }

            .UI_Table_Cell
            {
                position: relative;
                overflow: hidden;
                padding: 0 10px;

                //&:nth-child(1){ grid-area: 1; }
            }
        }
    </style>
    <script>
        ( function()
        {
            class UI_Table extends HTMLElement
            {
                constructor()
                {
                    super();
    
                    //this.attachShadow({ mode: 'open' });
                }
    
                render()
                {
                    /*
                    let style = document.createElement('style');
                    style.textContent = `.month{ display: grid; grid-template-columns: repeat( 7, 1fr ); }`;
                    this.shadowRoot.appendChild(style);*/
                }
    
                connectedCallback() // added to page
                {
                    //this.render();

                    console.log( 'connected' );
                }
                
                disconnectedCallback() // removed from page
                {
                    
                }
                
                adoptedCallback() // moved to page
                {
                       
                }
            }
    
            customElements.define( 'ui-table', UI_Table );
        })();
    </script>
    //#{ '<style>' + gridAreas( $props.id || $id, $props.layout ) + '</style>'}
    <ui-table id={ $props.id || $id } class={$$.concat(' ', 'UI_Table', $props.class )} {[!id,!class]...$props}>
        {$content}
    </ui-table>
}
[root.Header]
{
    <div class={'UI_Table_Header' + ( $props.class ? ' ' + $props.class : '' )}>
        {$content}
    </div>
}
[root.HeaderCell]
{
    <div class={'UI_Table_Cell UI_Table_Header_Cell' + ( $props.class ? ' ' + $props.class : '' )} draggable="true">
        {$content}
    </div>
}
[root.Row]
{
    <div class={'UI_Table_Row' + ( $props.class ? ' ' + $props.class : '' )}>
        {$content}
    </div>
}
[root.Cell]
{
    <div class={'UI_Table_Cell' + ( $props.class ? ' ' + $props.class : '' )}>
        {$content}
    </div>
}