[root]
{
    <style>
        .UI_Tabs
        {
            position: relative;

            > .UI_Tabs_Content
            {
                position: relative;
            }
        }
    </style>
    <script>
        window.UI_Tabs = class UI_Tabs
        {
            static onTab( tab )
            {
                if( tab.hasAttribute('active') ){ return }

                let header = tab.parentNode;
                [...header.querySelectorAll(':scope > .UI_Tabs_Tab[active]')].forEach( t => t.removeAttribute('active') );
                tab.setAttribute( 'active', '' );

                let tabs = header.nextElementSibling, index = [...header.children].filter( t => t.classList.contains('UI_Tabs_Tab') ).indexOf( tab );
                while( tabs && !tabs.classList.contains('UI_Tabs') ){ tabs = tabs.nextElementSibling }

                [...tabs.querySelectorAll(':scope > .UI_Tabs_Content:not([hidden])')].forEach( t => t.setAttribute( 'hidden', '' ));
                [...tabs.children].filter( t => t.classList.contains('UI_Tabs_Content') )[index].removeAttribute('hidden');
            }
        }
    </script>
    <div class={'UI_Tabs' + ( $props.class ? ' ' + $props.class : '' )} {[!class]...$props}>
        {$content}
    </div>
    // TODO add hidden, pridat callback, default callback prida podla selectora tomu co neni hidden atribut hidden a zrusi na tom co ma byt hidden podla poradia childu
    // callback ma parametre ( tab, event = show | close )
}
[root.Content]
{
    <div class={'UI_Tabs_Content' + ( $props.class ? ' ' + $props.class : '' )} hidden={$props.hasOwnProperty('active') ? undefined : null } {[!class,!active]...$props}>
        {$content}
    </div>
}
[root.Header]
{
    <style>
        .UI_Tabs_Header
        {
            display: flex;
            flex-direction: row;
            justify-content: flex-start;
            border-bottom: 1px solid silver;
            gap: 16px;
            user-select: none;
            -moz-user-select: none;
            -webkit-user-select: none;
            cursor: default;
        
            > .UI_Tabs_Tab
            {
                position: relative;
                display: flex;
                flex-direction: row;
                padding: 8px;
                cursor:pointer;
                margin-bottom: -1px;
                justify-content: flex-start;
                border: 1px solid silver;
                border: none;
                border-bottom: 3px solid transparent;
                font-weight: 300;
                font-size: 14px;
                
                padding: 8px 0;
                
                &[active]
                {
                    border-bottom-color: blue;
                    color: blue;
                }
            }
        }
    </style>    
    <div class={'UI_Tabs_Header' + ( $props.class ? ' ' + $props.class : '' )}>
        {$content}
    </div>
}
[root.Tab]
{
    //<div class={'UI_Tabs_Tab' + ( $props.class ? ' ' + $props.class : '' )} {[data-*]...$props} onclick="console.log(this.dataset);">
    <div class={'UI_Tabs_Tab' + ( $props.class ? ' ' + $props.class : '' )} {[!class]...$props} onclick="UI_Tabs.onTab(this)">
        {$content}
    </div>
    // Todo attribut close={ true }
}